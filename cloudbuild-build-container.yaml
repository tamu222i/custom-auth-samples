steps:
- name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: [ '-c', "gcloud secrets versions access latest --secret=dockerpassword --format='get(payload.data)' | tr '_-' '/+' | base64 -d > /workspace/decrypted-data.txt" ]

- name: gcr.io/$PROJECT_ID/remote-builder
  waitFor: ["-"]
  env:
    - INSTANCE_ARGS=--image-project centos-cloud --image-family centos-7 --preemptible --machine-type e2-medium --boot-disk-type=pd-ssd
    - ZONE=asia-northeast2-a
    - USERNAME=cloud-user

    - >
      COMMAND=id && 
      pwd && 
      cd workspace &&
      sudo bash -xe execroot.sh

# This step clones the custom-auth-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    gcloud source repos clone custom-auth-env && \
    cd custom-auth-env && \
    git checkout candidate && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

# This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > custom-auth-env/kubernetes.yaml

# This step pushes the manifest back to custom-auth-env
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd custom-auth-env && \
    git add kubernetes.yaml && \
    git commit -m "Deploying image gcr.io/${PROJECT_ID}/custom-auth:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository custom-auth-app
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git push origin candidate

timeout: 3600s
